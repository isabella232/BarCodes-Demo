/// <reference types="superagent" />
import * as Realm from "realm";
import * as superagent from "superagent";
export declare function Promisify<T>(callback: any, ...args: any[]): Promise<T>;
export declare class TimeoutError extends Error {
    ms: number;
    constructor(ms: number);
}
export declare function timeout<T>(promise: Promise<T>, ms: number): Promise<T>;
export declare function delay(ms: number): Promise<void>;
export declare function validateRealmPath(path: string, userId: string): string;
export declare function getUserIdFromRealmPath(path: string): string;
export declare function waitForDownload(realm: Realm): Promise<void>;
export declare function waitForUpload(realm: Realm): Promise<void>;
export declare function convertHttpError(error: any): any;
export declare function waitAsync<T>(getter: () => T | Promise<T>, verifier?: (item: T) => boolean, timeout?: number): Promise<T>;
export declare function retryRequest(retries?: number, delay?: number, shouldRetry?: (response: superagent.Response) => boolean): superagent.Plugin;
